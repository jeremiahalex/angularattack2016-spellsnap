{"version":3,"sources":["multiplayer.service.ts"],"names":[],"mappings":"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","file":"multiplayer.service.js","sourcesContent":["import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class MultiplayerService {\n    socket : any;\n    grid : any;\n    players : any;\n    rank : any;\n    playerId : string;\n    \n    gridCallback : Function;\n    updateCallback : Function;\n    letterAcceptedCallback : Function;\n    letterRejectedCallback : Function;\n    playersCallback : Function;\n    rankCallback : Function;\n    claimAcceptedCallback : Function;\n    claimRejectedCallback : Function;\n    \n    \n    constructor() {\n        this.grid = [];\n        this.playerId = \"\";\n        \n        //create socket io connection\n        if (document.location.hostname == \"localhost\")\n            this.socket = io(\"http://localhost:3000\");\n        else \n            this.socket = io(\"https://spellsnap.herokuapp.com\");\n        \n        //listen for events\n        this.socket.on(\"connect\", () => {\n            console.log(\"Connected to Game Server\");\n        });\n        this.socket.on(\"disconnect\", () => {\n            console.log(\"Disconnected from Game Server\");\n        });\n        \n        this.socket.on(\"grid\", (grid) => {\n            console.log(\"Received grid \", grid);\n            this.grid = grid;\n            if ( this.gridCallback ) this.gridCallback(this.grid);\n        });\n        \n        this.socket.on(\"players\", (players) => {\n            console.log(\"Received players \", players);\n            this.players = players;\n            if ( this.playersCallback ) this.playersCallback(this.players);\n        });\n        \n        this.socket.on(\"rank\", (rank) => {\n            console.log(\"Received rank \", rank);\n            this.rank = rank;\n            if ( this.rankCallback ) this.rankCallback(this.rank);\n        });\n        \n        this.socket.on(\"playerId\", (playerId) => {\n            console.log(\"Received playerId \", playerId);\n            this.playerId = playerId;\n        });\n        \n        this.socket.on(\"update\", (update) => {\n            console.log(\"Received update \", update);\n            if ( this.updateCallback ) this.updateCallback(update);\n            //TODO. if we don't have a callback we need to handle this differently as the grid will be out of sync\n            //options include asking for the grid again or storing these in an array. A timestamp may help to differentiate\n            //observe problem first before fixing\n        });\n        \n        this.socket.on(\"letterAccepted\", (pack) => {\n            console.log(\"letterAccepted \", pack);\n            if ( this.letterAcceptedCallback ) this.letterAcceptedCallback(pack);\n        });\n        \n        this.socket.on(\"letterRejected\", (pack) => {\n            console.log(\"letterRejected \", pack);\n            if ( this.letterRejectedCallback ) this.letterRejectedCallback(pack);\n        });\n        \n        \n        this.socket.on(\"claimAccepted\", (pack) => {\n            console.log(\"claimAccepted \", pack);\n            if ( this.claimAcceptedCallback ) this.claimAcceptedCallback(pack);\n        });\n        \n        this.socket.on(\"claimRejected\", (pack) => {\n            console.log(\"claimRejected \", pack);\n            if ( this.claimRejectedCallback ) this.claimRejectedCallback(pack);\n        });\n    }\n    \n    //we register callbacks for each socket event, we could use observables I suppose but too tired to work that out\n    registerCallbacks( gridCallback, updateCallback, letterAcceptedCallback, letterRejectedCallback, playersCallback, rankCallback\n    , claimAcceptedCallback, claimRejectedCallback ) {\n        this.gridCallback = gridCallback;\n        this.updateCallback = updateCallback;\n        this.letterAcceptedCallback = letterAcceptedCallback;\n        this.letterRejectedCallback = letterRejectedCallback;\n        this.playersCallback = playersCallback;\n        this.rankCallback = rankCallback;\n        this.claimAcceptedCallback = claimAcceptedCallback;\n        this.claimRejectedCallback = claimRejectedCallback;\n        //we may already have the grid, if so return it, so they can begin the game\n        if ( this.grid && this.grid.length > 0 ) this.gridCallback(this.grid);\n    }\n    \n    addLetter( x:number, y:number, letter:string ) {\n        var pack = { x: x, y: y, letter: letter };\n        console.log(\"Attempting to add letter: \", pack );\n        this.socket.emit(\"addLetter\", pack );\n    }\n    \n    claimWord( x:number, y:number, cells:any, score:number ) {\n        var pack = { x: x, y: y, cells: cells, score: score };\n        console.log(\"Attempting to claim word: \", pack );\n        this.socket.emit(\"claimWord\", pack );\n    }\n    \n    sendStats( score:number, currentLetter:string ) {\n        var pack = { score: score, currentLetter: currentLetter };\n        console.log(\"Attempting to send stats: \", pack );\n        this.socket.emit(\"stats\", pack );\n    }\n}"],"sourceRoot":"/source/"}