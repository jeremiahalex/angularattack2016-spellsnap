{"version":3,"sources":["player.ts"],"names":[],"mappings":";;;QAAM,SAAS,EACT,kBAAkB,EAClB,QAAQ;;;;YAFR,SAAS,GAAe,IAAI,CAAC;YAC7B,kBAAkB,GAAM,IAAI,CAAC;YAC7B,QAAQ,GAAgB,iHAAiH,CAAC;YAEhJ;gBAWI;oBACI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACjB,CAAC;gBAED,sBAAK,GAAL;oBACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;oBACzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;oBACtC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;oBACtB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAClB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;oBACf,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;gBACtB,CAAC;gBAED,0BAAS,GAAT;oBAAA,iBAuBC;oBAtBG,wBAAwB;oBACxB,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAE7B,uBAAuB;oBACvB,IAAI,CAAC,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;oBAC3C,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAE;wBACzB,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;wBACnC,IAAI,EAAE,GAAG,OAAO,GAAG,KAAI,CAAC,cAAc,CAAC;wBAEvC,EAAE,CAAC,CAAE,CAAC,KAAI,CAAC,KAAM,CAAC,CAAC,CAAC;4BAChB,KAAI,CAAC,YAAY,IAAI,EAAE,CAAC;4BACxB,EAAE,CAAC,CAAE,KAAI,CAAC,YAAY,IAAI,CAAE,CAAC,CAAA,CAAC;gCAC1B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gCAC1B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;4BACtB,CAAC;wBACL,CAAC;wBAED,sEAAsE;wBACtE,EAAE,CAAC,CAAE,KAAI,CAAC,QAAQ,GAAG,CAAE,CAAC;4BAAC,KAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;wBAE7C,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC;oBAClC,CAAC,EAAC,GAAG,CAAC,CAAC;gBACX,CAAC;gBAEC,4HAA4H;gBAC9H,6BAAY,GAAZ;oBACI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxE,CAAC;gBAED,yBAAQ,GAAR;oBACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,YAAY,IAAI,SAAS,CAAC;oBAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU;wBACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,CAAA;oBACrC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gBACpD,CAAC;gBAED,yBAAQ,GAAR;oBACI,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;oBACzB,IAAI,CAAC,YAAY,IAAI,kBAAkB,CAAC;oBACxC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC;gBACL,aAAC;YAAD,CApEA,AAoEC,IAAA;YApED,2BAoEC,CAAA","file":"player.js","sourcesContent":["const TURN_TIME             = 5000;\nconst TRASH_PENALTY_TIME    = 5000;\nconst ALPHABET              = '!!!!!aaaaaaaaabcccddddeeeeeeeeeeeeffgghhhhhhiiiiiiiijkllllmmnnnnnnnnoooooooooppqrrrrrrsssssstttttttttuuuvwwxyyz';\n\nexport class Player {\n    currentLetter   : string;\n    nextLetter      : string;\n    timeTillTurn    : number;\n    score           : number;\n    ready           : boolean;\n    lastUpdateTime  : number;\n    interval        : number;\n    rank            : number;\n    timeLeft        : number;\n    \n    constructor() {\n        this.reset();\n    }\n    \n    reset() {\n        this.currentLetter = this.randomLetter();\n        this.nextLetter = this.randomLetter();\n        this.timeTillTurn = 0;\n        this.score = 0;\n        this.ready = true;\n        this.rank = -1;\n        this.timeLeft = 0;\n    }\n    \n    beignGame() {\n        //clear interval if one.\n        clearInterval(this.interval);\n        \n        //start our update loop\n        this.lastUpdateTime = new Date().getTime();\n        this.interval = setInterval( () => {   \n            var timeNow = new Date().getTime();\n            var dt = timeNow - this.lastUpdateTime;\n            \n            if ( !this.ready ) {\n                this.timeTillTurn -= dt;\n                if ( this.timeTillTurn <= 0 ){\n                    console.log('start turn');\n                    this.ready = true;\n                }\n            }\n            \n            //we also update the game time here, rather than create a new interval\n            if ( this.timeLeft > 0 ) this.timeLeft -= dt;\n            \n            this.lastUpdateTime = timeNow;\n        },500);\n    }\n    \n      //Could move to the following logic serverside for a more secure game but this is a hack, so no need to worry about cheaters\n    randomLetter():string{\n        return ALPHABET.charAt(Math.floor(Math.random() * ALPHABET.length));\n    }\n   \n    nextTurn(){\n        this.ready = false;\n        this.timeTillTurn += TURN_TIME;\n        this.currentLetter = this.nextLetter,\n        this.nextLetter = this.randomLetter()\n        console.log('next turn in ', this.timeTillTurn);\n    }\n    \n    skipTurn(){\n        console.log('skip turn');\n        this.timeTillTurn += TRASH_PENALTY_TIME;\n        this.nextTurn();\n    }\n}\n"],"sourceRoot":"/source/"}